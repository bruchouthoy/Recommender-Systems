dfs.data.dir=data/
dfs.result.dir=result
dfs.log.dir=data/log

#Book-Ratings dataset
data.input.path=BookRatings_Explicit_subset.txt
dfs.content.path=data/itemFeatures_subset.csv

#Using filmtrust test dataset
#data.input.path=filmtrust
#dfs.content.path=

#class files
#rec.recommender.class=net.librec.recommender.ItemKNNRecommender
#rec.recommender.class=net.librec.recommender.UserKNNRecommender
#rec.recommender.class=net.librec.recommender.SVDPlusPlusRecommender
#rec.recommender.class=net.librec.recommender.BiasedMFRecommender
#rec.recommender.class=net.librec.recommender.NaiveBayesRecommender
rec.recommender.class=net.librec.recommender.HybridRecommender2
#rec.recommender.class=net.librec.recommender.MostPopularRecommender


# setting dataset format(UIR, UIRT)
data.column.format=UIR
# text, arff is accepted
data.model.format=text
# setting method of split data
# value can be ratio, loocv, given, KCV
data.model.splitter=kcv
data.splitter.cv.number=5
# using rating to split dataset
data.splitter.ratio=rating

# the ratio of trainset
# this value should in (0,1)
data.splitter.trainset.ratio=0.8
ratio.data.splitter=ratingratio

# set the random seed for reproducing the results (split data, init parameters and other methods using random)
# default is set 1l
# if do not set ,just use System.currentTimeMillis() as the seed and could not reproduce the results.
rec.random.seed=201701

#MAE Evaluator
#rec.recommender.isranking=false
#rec.recommender.ranking.topn=0
#rec.eval.classes=net.librec.eval.rating.MAEEvaluator
#rec.eval.enable=true
#rec.eval.classes=mae

#To find Precision@10
rec.recommender.ranking.topn=10
rec.eval.classes=net.librec.eval.ranking.PrecisionEvaluator
rec.recommender.isranking=true
rec.eval.enable=true
#rec.eval.classes=auc

#Config params for User and Item based k-NN
#can use user,item,social similarity, default value is user, maximum values:user,item,social
rec.recommender.similarities=user
rec.similarity.class=pcc
rec.neighbors.knn.number=50
rec.similarity.isuser=true
rec.filter.class=net.librec.filter.GenericRecommendedFilter

#config params for the Hybrid recommender
rec.content.weight=0.5

#Config params for SVDPlusPlusRecommender
rec.iterator.learnrate=0.001
rec.iterator.learnrate.maximum=0.01
rec.iterator.maximum=10
rec.user.regularization=0.01
rec.item.regularization=0.01
rec.impItem.regularization=0.015
#rec.factor.number=10
#rec.learnrate.bolddriver=false
#rec.learnrate.decay=1.0

#Config params for BiasedMFRecommender
#rec.bias.regularization=0.000001
#rec.iterator.maximum=10
#rec.iterator.learnrate=0.001

rec.parallel.support=true

#Config params for content based recommender
rec.rating.threshold=7.0